{"ast":null,"code":"var _jsxFileName = \"/Users/scottwattenbarger/Desktop/Projects/ecommerce/client/src/components/CategoryMenu/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport { Dropdown } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CategoryMenu() {\n  _s();\n  const [state, dispatch] = useStoreContext();\n  const {\n    categories\n  } = state;\n  const {\n    loading,\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n  const handleChange = event => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: event.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dropdown, {\n      onSelect: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n        variant: \"success\",\n        id: \"dropdown-basic\",\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"\",\n          children: \"Select a category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), categories.map(item => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: item._id,\n          children: item.name\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(CategoryMenu, \"dVCQPHAWx2znearw0XIiXyA+Ei0=\", false, function () {\n  return [useStoreContext, useQuery];\n});\n_c = CategoryMenu;\nexport default CategoryMenu;\nvar _c;\n$RefreshReg$(_c, \"CategoryMenu\");","map":{"version":3,"names":["React","useEffect","useQuery","useStoreContext","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","QUERY_CATEGORIES","idbPromise","Dropdown","jsxDEV","_jsxDEV","CategoryMenu","_s","state","dispatch","categories","loading","data","categoryData","type","forEach","category","then","handleChange","event","currentCategory","target","value","children","onSelect","Toggle","variant","id","fileName","_jsxFileName","lineNumber","columnNumber","Menu","Item","eventKey","map","item","_id","name","_c","$RefreshReg$"],"sources":["/Users/scottwattenbarger/Desktop/Projects/ecommerce/client/src/components/CategoryMenu/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport { Dropdown } from \"react-bootstrap\"; \n\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleChange = (event) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: event.target.value,\n    });\n  };\n\n  return (\n    <div>\n      <Dropdown onSelect={handleChange}>\n        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n          Categories\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          <Dropdown.Item eventKey=\"\">Select a category</Dropdown.Item>\n          {categories.map((item) => (\n            <Dropdown.Item key={item._id} eventKey={item._id}>\n              {item.name}\n            </Dropdown.Item>\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}