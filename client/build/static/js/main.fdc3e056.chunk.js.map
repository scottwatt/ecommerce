{"version":3,"sources":["utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","components/CarouselProductItem/index.js","components/JumbotronCarousel/index.js","pages/Home.js","pages/Detail.js","components/Return/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","reducer","state","action","type","_objectSpread","products","_toConsumableArray","cartOpen","cart","concat","product","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","_ref","value","initialState","props","_objectWithoutProperties","_excluded","_useProductReducer","useReducer","_useProductReducer2","_slicedToArray","dispatch","_jsx","useStoreContext","useContext","ProductItem","item","_useStoreContext","_useStoreContext2","image","price","quantity","_jsxs","className","children","Link","to","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","_templateObject","_taggedTemplateLiteral","QUERY_CHECKOUT","_templateObject2","QUERY_CATEGORIES","_templateObject3","_templateObject4","QUERY_USER","_templateObject5","_templateObject6","ProductList","_ref$carousel","carousel","_useQuery","useQuery","loading","data","filterProducts","category","useEffect","forEach","then","slice","spinner","CategoryMenu","categoryData","DropdownButton","id","title","variant","onSelect","eventKey","Dropdown","Item","CartItem","placeholder","onChange","target","role","removeFromCart","AuthService","_classCallCheck","_createClass","key","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","_useLazyQuery","useLazyQuery","_useLazyQuery2","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","_getCart","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","stop","apply","arguments","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","CarouselProductItem","description","JumbotronCarousel","items","Carousel","Home","_useState","useState","_useState2","carouselItems","setCarouselItems","Detail","useParams","currentProduct","setCurrentProduct","indexedProducts","_Fragment","disabled","p","Return","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","email","password","formState","setFormState","_useMutation","useMutation","_useMutation2","login","error","handleFormSubmit","event","mutationResponse","preventDefault","t0","_x","handleChange","_event$target","_defineProperty","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Navigation","Navbar","bg","expand","Container","Brand","Toggle","Collapse","NavLink","href","logout","Success","addOrder","_saveOrder","_yield$addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Nav","Routes","Route","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","React","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fdc3e056.chunk.js","sourcesContent":["export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport './productItem.css';\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n          className='productImage'\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_SEARCH_ITEMS = gql`\n  query searchItems($searchTerm: String!) {\n    searchItems(searchTerm: $searchTerm) {\n      _id\n      name\n      description\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.7e729fec.gif\";","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList({ carousel = false }) {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  if (carousel) {\n    return (\n      <div className=\"flex-row\">\n        {filterProducts().slice(0, 3).map((product) => (\n          <ProductItem\n            key={product._id}\n            _id={product._id}\n            image={product.image}\n            name={product.name}\n            price={product.price}\n            quantity={product.quantity}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport function filterProducts(products, currentCategory) {\n  if (!currentCategory) {\n    return products;\n  }\n\n  return products.filter(\n    (product) => product.category._id === currentCategory\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleChange = (eventKey) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: eventKey,\n    });\n  };\n  \n\n  return (\n    <div>\n    <DropdownButton\n      id=\"category-dropdown\"\n      title=\"Categories\"\n      variant=\"secondary\"\n      onSelect={handleChange}\n    >\n      <Dropdown.Item eventKey=\"\">Select a category</Dropdown.Item>\n      {categories.map((item) => (\n        <Dropdown.Item key={item._id} eventKey={item._id}>\n          {item.name}\n        </Dropdown.Item>\n      ))}\n    </DropdownButton>\n  </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\n// stripePromise returns a promise with the stripe object as soon as the Stripe package loads\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  // We check to see if there is a data object that exists, if so this means that a checkout session was returned from the backend\n  // Then we should redirect to the checkout with a reference to our session id\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  // If the cart's length or if the dispatch function is updated, check to see if the cart is empty.\n  // If so, invoke the getCart method and populate the cart with the existing from the session\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  // When the submit checkout method is invoked, loop through each item in the cart\n  // Add each item id to the productIds array and then invoke the getCheckout query passing an object containing the id for all our products\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {/* Check to see if the user is logged in. If so render a button to check out */}\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport \"./CarouselProductItem.css\"\n\nfunction CarouselProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const { image, name, _id, price, quantity } = item;\n  const { cart } = state;\n\n  const linkStyle = {\n    cursor: \"pointer\",\n  };\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }  };\n\n  return (\n    <div className=\"carouselProductItem\">\n      <Link to={`/products/${item._id}`}>\n        <img\n          alt={item.name}\n          src={`/images/${item.image}`}\n          className=\"carouselProductItemImage\"\n        />\n      </Link>\n      <div className=\"carouselProductItemInfo\">\n        <h3>{item.name}</h3>\n        <p>{item.description}</p>\n        <button className=\"btn btn-primary\" onClick={addToCart}>\n          ${item.price}\n        </button>\n\n      </div>\n    </div>\n  );\n}\n\nexport default CarouselProductItem;\n","import React from 'react';\nimport { Carousel } from 'react-bootstrap';\nimport CarouselProductItem from '../CarouselProductItem';\nimport './JumbotronCarousel.css';\n\nconst JumbotronCarousel = ({ items }) => {\n  return (\n    <Carousel className=\"mb-4\">\n      {items.map((item) => (\n        <Carousel.Item key={item._id} className=\"carousel-item-custom\"\n        >\n          <CarouselProductItem {...item} />\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  );\n};\n\nexport default JumbotronCarousel;\n\n","import React, { useEffect, useState } from \"react\";\nimport ProductList, { filterProducts } from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\nimport JumbotronCarousel from \"../components/JumbotronCarousel\";\n// import TestCarousel from \"../components/TestCarousel\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\n\nconst Home = () => {\n  const [state] = useStoreContext();\n  const [carouselItems, setCarouselItems] = useState([]);\n  const { currentCategory } = state;\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      setCarouselItems(filterProducts(data.products, currentCategory).slice(0, 3));\n    }\n  }, [data, currentCategory]);\n\n  return (\n    <div className=\"container\">\n      {!loading && <JumbotronCarousel items={carouselItems} />}\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Return({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Return;\n","import React from \"react\";\nimport Return from \"../components/Return\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Return>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Return>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React, { useState } from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport CategoryMenu from \"../CategoryMenu\";\nimport { Navbar, Container, Nav as NavLink} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./navbar.css\"\n\n\nfunction Navigation() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Container>\n        <Navbar.Brand>\n          <Link to=\"/\" className=\"text-decoration-none text-reset\">\n            Game Center\n          </Link>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"navbar-nav\" />\n        <Navbar.Collapse id=\"navbar-nav\">\n          <NavLink className=\"me-auto\">\n            <CategoryMenu />\n          </NavLink>\n          <NavLink>{showNavigation()}</NavLink>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Navigation;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Return from '../components/Return';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Return>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Return>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route \n                path=\"/success\" \n                element={<Success />} \n              />\n              <Route \n                path=\"/orderHistory\" \n                element={<OrderHistory />} \n              />\n              <Route \n                path=\"/products/:id\" \n                element={<Detail />} \n              />\n              <Route \n                path=\"*\" \n                element={<NoMatch />} \n              />\n            </Routes>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}