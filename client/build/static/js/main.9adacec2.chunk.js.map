{"version":3,"sources":["utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","components/CarouselProductItem/index.js","components/JumbotronCarousel/index.js","pages/Home.js","pages/Detail.js","components/Return/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","App.js","pages/CartPage.js","serviceWorker.js","index.js"],"names":["pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","reducer","state","action","type","_objectSpread","products","_toConsumableArray","cartOpen","cart","concat","product","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","_ref","value","initialState","props","_objectWithoutProperties","_excluded","_useProductReducer","useReducer","_useProductReducer2","_slicedToArray","dispatch","_jsx","useStoreContext","useContext","ProductItem","item","_useState","useState","_useState2","itemAdded","setItemAdded","_useStoreContext","_useStoreContext2","image","price","quantity","_jsxs","className","children","Link","to","alt","src","onClick","itemInCart","find","cartItem","parseInt","setTimeout","QUERY_PRODUCTS","gql","_templateObject","_taggedTemplateLiteral","QUERY_CHECKOUT","_templateObject2","QUERY_CATEGORIES","_templateObject3","_templateObject4","QUERY_USER","_templateObject5","_templateObject6","ProductList","_ref$carousel","carousel","_useQuery","useQuery","loading","data","filterProducts","category","useEffect","forEach","then","slice","spinner","CategoryMenu","categoryData","DropdownButton","id","title","variant","onSelect","eventKey","Dropdown","Item","CartItem","placeholder","onChange","target","role","removeFromCart","AuthService","_classCallCheck","_createClass","key","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","_useLazyQuery","useLazyQuery","_useLazyQuery2","getCheckout","isCartOpen","setIsCartOpen","totalItemsInCart","reduce","acc","toggleCart","res","redirectToCheckout","sessionId","checkout","session","_getCart","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","stop","apply","arguments","getCart","_Fragment","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","CarouselProductItem","description","JumbotronCarousel","items","Carousel","Home","carouselItems","setCarouselItems","Detail","useParams","currentProduct","setCurrentProduct","indexedProducts","disabled","p","Return","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","email","password","formState","setFormState","_useMutation","useMutation","_useMutation2","login","error","handleFormSubmit","event","mutationResponse","preventDefault","t0","_x","handleChange","_event$target","_defineProperty","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Navigation","Navbar","bg","expand","Container","Brand","Toggle","Collapse","Nav","as","href","logout","Success","addOrder","_saveOrder","_yield$addOrder","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Routes","Route","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","React","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9adacec2.chunk.js","sourcesContent":["export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport './productItem.css';\n\nfunction ProductItem(item) {\n  const [itemAdded, setItemAdded] = useState(false);\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  function showAddedMessage() {\n    setItemAdded(true);\n    setTimeout(() => {\n      setItemAdded(false);\n    }, 3000); // hide message after 3 seconds\n  }\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n    showAddedMessage(); \n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n       {itemAdded && (\n      <div className=\"item-added-message\">\n        Item added to cart!\n      </div>\n    )}\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n          className='productImage'\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button className=\"productButton\" onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_SEARCH_ITEMS = gql`\n  query searchItems($searchTerm: String!) {\n    searchItems(searchTerm: $searchTerm) {\n      _id\n      name\n      description\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.7e729fec.gif\";","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport './ProductList.css';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList({ carousel = false }) {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  if (carousel) {\n    return (\n      <div className=\"flex-row\">\n        {filterProducts().slice(0, 3).map((product) => (\n          <ProductItem\n            key={product._id}\n            _id={product._id}\n            image={product.image}\n            name={product.name}\n            price={product.price}\n            quantity={product.quantity}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"product-list\">\n      <div className=\"container\">\n        <h2>Our Products:</h2>\n        {state.products.length ? (\n          <div className=\"flex-row\">\n            {filterProducts().map((product) => (\n              <ProductItem\n                key={product._id}\n                _id={product._id}\n                image={product.image}\n                name={product.name}\n                price={product.price}\n                quantity={product.quantity}\n              />\n            ))}\n          </div>\n        ) : (\n          <h3>You haven't added any products yet!</h3>\n        )}\n        {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      </div>\n    </div>\n  );\n}\n\nexport function filterProducts(products, currentCategory) {\n  if (!currentCategory) {\n    return products;\n  }\n\n  return products.filter(\n    (product) => product.category._id === currentCategory\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleChange = (eventKey) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: eventKey,\n    });\n  };\n  \n\n  return (\n    <div>\n    <DropdownButton\n      id=\"category-dropdown\"\n      title=\"Categories\"\n      variant=\"secondary\"\n      onSelect={handleChange}\n    >\n      <Dropdown.Item eventKey=\"\">Select a category</Dropdown.Item>\n      {categories.map((item) => (\n        <Dropdown.Item key={item._id} eventKey={item._id}>\n          {item.name}\n        </Dropdown.Item>\n      ))}\n    </DropdownButton>\n  </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect, useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const totalItemsInCart = state.cart.reduce((acc, item) => acc + item.purchaseQuantity, 0);\n\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    setIsCartOpen(!isCartOpen);\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  return (\n    <>\n      <div className=\"cart-toggle\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n        <span className=\"cart-items-count\">{totalItemsInCart}</span>\n      </div>\n      {isCartOpen && (\n        <div className=\"cart-overlay\">\n          <div className=\"cart-panel\">\n            <div className=\"close\" onClick={toggleCart}>\n              [close]\n            </div>\n            <h2>Shopping Cart</h2>\n            {state.cart.length ? (\n              <div>\n                <strong className='mx-2'>Total: ${calculateTotal()}</strong>\n                {Auth.loggedIn() ? (\n                  <button onClick={submitCheckout}>Checkout</button>\n                ) : (\n                  <span>(log in to check out)</span>\n                )}\n                {state.cart.map((item) => (\n                  <CartItem key={item._id} item={item} />\n                ))}\n\n                <div className=\"flex-row space-between\">\n\n                </div>\n              </div>\n            ) : (\n              <h3>\n                <span role=\"img\" aria-label=\"shocked\">\n                  😱\n                </span>\n                You haven't added anything to your cart yet!\n              </h3>\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport \"./CarouselProductItem.css\"\n\nfunction CarouselProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const { image, name, _id, price, quantity } = item;\n  const { cart } = state;\n\n  const linkStyle = {\n    cursor: \"pointer\",\n  };\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }  };\n\n  return (\n    <div className=\"carouselProductItem\">\n      <Link to={`/products/${item._id}`}>\n        <img\n          alt={item.name}\n          src={`/images/${item.image}`}\n          className=\"carouselProductItemImage\"\n        />\n      </Link>\n      <div className=\"carouselProductItemInfo\">\n        <h3>{item.name}</h3>\n        <p>{item.description}</p>\n        <button className=\"btn btn-primary\" onClick={addToCart}>\n          ${item.price}\n        </button>\n\n      </div>\n    </div>\n  );\n}\n\nexport default CarouselProductItem;\n","import React from 'react';\nimport { Carousel } from 'react-bootstrap';\nimport CarouselProductItem from '../CarouselProductItem';\nimport './JumbotronCarousel.css';\n\nconst JumbotronCarousel = ({ items }) => {\n  return (\n    <Carousel className=\"mb-4\">\n      {items.map((item) => (\n        <Carousel.Item key={item._id} className=\"carousel-item-custom\"\n        >\n          <CarouselProductItem {...item} />\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  );\n};\n\nexport default JumbotronCarousel;\n\n","import React, { useEffect, useState } from \"react\";\nimport ProductList, { filterProducts } from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\nimport JumbotronCarousel from \"../components/JumbotronCarousel\";\n// import TestCarousel from \"../components/TestCarousel\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\n\nconst Home = () => {\n  const [state] = useStoreContext();\n  const [carouselItems, setCarouselItems] = useState([]);\n  const { currentCategory } = state;\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      setCarouselItems(filterProducts(data.products, currentCategory).slice(0, 3));\n    }\n  }, [data, currentCategory]);\n\n\n  return (\n    <div className=\"container\">\n      {!loading && <JumbotronCarousel items={carouselItems} />}\n      <ProductList />\n      {/* <Cart /> */}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-7\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button className='detail-button mx-5' onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            className='detail'\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Return({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Return;\n","import React from \"react\";\nimport Return from \"../components/Return\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Return>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Return>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport \"./Login.css\";\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"sc-login\">\n      <div className=\"container my-1\">\n        <Link to=\"/signup\">← Go to Signup</Link>\n        <div className=\"login-content\">\n          <h2 className=\"login-title\">Login</h2>\n          <form onSubmit={handleFormSubmit}>\n            <div className=\"form-element\">\n              <label htmlFor=\"email\" className=\"form-label\">\n                Email address:\n              </label>\n              <input\n                placeholder=\"youremail@test.com\"\n                name=\"email\"\n                type=\"email\"\n                id=\"email\"\n                onChange={handleChange}\n                className=\"form-control\"\n              />\n            </div>\n            <div className=\"form-element\">\n              <label htmlFor=\"pwd\" className=\"form-label\">\n                Password:\n              </label>\n              <input\n                placeholder=\"******\"\n                name=\"password\"\n                type=\"password\"\n                id=\"pwd\"\n                onChange={handleChange}\n                className=\"form-control\"\n              />\n            </div>\n            {error ? (\n              <div>\n                <p className=\"error-text\">\n                  The provided credentials are incorrect\n                </p>\n              </div>\n            ) : null}\n            <div className=\"flex-row flex-end\">\n              <button type=\"submit\" className=\"btn-login\">\n                Submit\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\nimport './Login.css'; \n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"sc-login\">\n      <div className=\"container my-1\">\n        <Link to=\"/login\">← Go to Login</Link>\n        <div className=\"login-content\">\n          <h2 className=\"login-title\">Signup</h2>\n          <form onSubmit={handleFormSubmit}>\n            <div className=\"form-element\">\n              <label htmlFor=\"firstName\" className=\"form-label\">\n                First Name:\n              </label>\n              <input\n                placeholder=\"First\"\n                name=\"firstName\"\n                type=\"text\"\n                id=\"firstName\"\n                onChange={handleChange}\n                className=\"form-control\"\n              />\n            </div>\n            <div className=\"form-element\">\n              <label htmlFor=\"lastName\" className=\"form-label\">\n                Last Name:\n              </label>\n              <input\n                placeholder=\"Last\"\n                name=\"lastName\"\n                type=\"text\"\n                id=\"lastName\"\n                onChange={handleChange}\n                className=\"form-control\"\n              />\n            </div>\n            <div className=\"form-element\">\n              <label htmlFor=\"email\" className=\"form-label\">\n                Email:\n              </label>\n              <input\n                placeholder=\"youremail@test.com\"\n                name=\"email\"\n                type=\"email\"\n                id=\"email\"\n                onChange={handleChange}\n                className=\"form-control\"\n              />\n            </div>\n            <div className=\"form-element\">\n              <label htmlFor=\"pwd\" className=\"form-label\">\n                Password:\n              </label>\n              <input\n                placeholder=\"******\"\n                name=\"password\"\n                type=\"password\"\n                id=\"pwd\"\n                onChange={handleChange}\n                className=\"form-control\"\n              />\n            </div>\n            <div className=\"flex-row flex-end\">\n              <button type=\"submit\" className=\"btn-login\">\n                Submit\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React, { useState } from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport CategoryMenu from \"../CategoryMenu\";\nimport Cart from \"../Cart\";\nimport { Navbar, Container, Nav } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./navbar.css\"\n\nfunction Navigation() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <Nav className=\"nav-right\">\n          <Nav.Link as={Link} to=\"/orderHistory\">\n            Order History\n          </Nav.Link>\n          <Nav.Link href=\"/\" onClick={() => Auth.logout()}>\n            Logout\n          </Nav.Link>\n        </Nav>\n      );\n    } else {\n      return (\n        <Nav className=\"nav-right login\">\n          <Nav.Link as={Link} to=\"/signup\">\n            Signup\n          </Nav.Link>\n          <Nav.Link as={Link} to=\"/login\">\n            Login\n          </Nav.Link>\n        </Nav>\n      );\n    }\n  }\n\n  return (\n    <Navbar className=\"sticky\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Container>\n        <Navbar.Brand>\n          <Link to=\"/\" className=\"text-decoration-none text-reset\">\n            Game Center\n          </Link>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"navbar-nav\" />\n        <Navbar.Collapse id=\"navbar-nav\">\n          <Nav className=\"nav-left me-auto\">\n            <CategoryMenu />\n          </Nav>\n          {showNavigation()}\n          <Cart />\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Navigation;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Return from '../components/Return';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Return>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Return>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-7\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\nimport CartPage from \"./pages/CartPage\";\n\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:5002/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route \n                path=\"/success\" \n                element={<Success />} \n              />\n              {/* <Route \n                path=\"/cart\" \n                element={<CartPage />} \n                /> */}\n              <Route \n                path=\"/orderHistory\" \n                element={<OrderHistory />} \n              />\n              <Route \n                path=\"/products/:id\" \n                element={<Detail />} \n              />\n              <Route \n                path=\"*\" \n                element={<NoMatch />} \n              />\n            </Routes>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport CartItem from '../components/CartItem';\nimport Auth from '../utils/auth';\nimport { useStoreContext } from '../utils/GlobalState';\nimport { ADD_MULTIPLE_TO_CART } from '../utils/actions';\nimport '../components/Cart/style.css';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst CartPage = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\">\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default CartPage;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}